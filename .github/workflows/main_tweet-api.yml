name: Deploy Flask API

on:
  push:
    branches:
      - main  # Déclencher le déploiement sur chaque push sur la branche principale

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Étape 1: Récupérer le code
    - name: Checkout code
      uses: actions/checkout@v2

    # Étape 2: Configurer Python
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'

    # Étape 3: Installer les dépendances (requirements.txt)
    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt

    # Étape 4: Charger les modèles (FastText, spaCy, etc.)
    - name: Preload models
      run: |
        python - << END
        import gensim.downloader as api
        import spacy
        import tensorflow as tf


        # Initialiser spaCy
        nlp = spacy.load('en_core_web_sm')
        print("Modèle spaCy initialisé.")

        # Charger un modèle TensorFlow (si applicable)
        # lstm_model = tf.keras.models.load_model('./models/LSTM_plus_Lemmatization_plus_FastText_model.h5')
        # print("Modèle TensorFlow chargé.")
        END

    # Étape 5: Rendre startup.sh exécutable
    - name: Make startup.sh executable
      run: chmod +x ./startup.sh

    # Étape 6: Déployer sur Azure Web App
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'tweet-api'
        publish-profile: ${{ secrets.AZURE_API }}
        package: .

    # Étape 7: Lancer le script startup.sh pour démarrer l'application avec Gunicorn
    - name: Run startup.sh
      run: ./startup.sh
